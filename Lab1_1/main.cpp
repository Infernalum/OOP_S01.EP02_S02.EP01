
/* Лаба 1. Вариант 19.
        Из входного потока ыыодится прямоугольная сильно разряженная матрица
целых чисел [a_ij], i = 1, ..., m; j = 1, ..., n. Значения m и n заранее
неизвестны и вводятся с входного потока.
        Сформировать новую матрицу, поместив в ее i-тую строку числа из i-ой
строки исходной матрицы, преобразованные в соотвествии с некоторым правилом
(например, в которых цифры записаны в обратном порядке).
        Предусмотреть отладку программы для разных алгоритмов преобразования
чисел. Исходную и полученную матрицы  вывести в выходной поток с необходимыми
комментариями.*/

#include "lab1_1.h"

using namespace Lab1;

extern const char* msgs[];

/* Массив указателей на функции - для реализации выбора функции; порядок
 * перечисления функций в списке инициализации должен соответсвовать порядку
 * указания альтернатив в списке альтернатив */
int (*fptr[])(SparseMatrix*) = {NULL, D_Add, D_Show};

int main(int argc, char* argv[]) {
  QCoreApplication a(argc, argv);

  SparseMatrix SourceMatrix = {0, 0, nullptr};  // Исходная разряженная матрица
  SparseMatrix ResultMatrix = {0, 0, nullptr};  // Результирующая матрица
  Input(SourceMatrix);
  int rc;
  while (rc = dialog(msgs, NMsgs))
    if (!fptr[rc](&SourceMatrix))
      break;
  Delete(&SourceMatrix);
  Delete(&ResultMatrix);
  return a.exec();
}
