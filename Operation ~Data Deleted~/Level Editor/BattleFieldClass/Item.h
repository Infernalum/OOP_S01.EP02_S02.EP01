#ifndef ITEM_H
#define ITEM_H


namespace Battlefield {

	class Item {
	private:

		// Кол-во очков, которые нужно потратить, чтобы заюзать предмет (выстрелить, захилиться, перезарядиться и тд)
		int usedPoint;

	protected:

		// Вес предмета (считается отдельно, т.к. для аптечки и оружейного ящика (да и для оружия) вес высчитывается с учетом сотояния дочерних классов
		double weight;

	public:

		/********************************************************/
		/*					 Конструкторы						*/
		/********************************************************/

		// Копирующие/перемещающие конструкторы по умолчанию

		// Единственный конструктор
		Item(int uP = 1);

		/********************************************************/
		/*						Геттеры							*/
		/********************************************************/

		int get_weight() { return weight; };
		int get_uP() { return usedPoint; };



		/********************************************************/
		/*						Сеттеры							*/
		/********************************************************/

		// Изменение веса предмета (для кадого типа предмета свой метод подсчета веса)
		virtual const Item& set_weight() = 0;

		Item& set_usedPoint(int);

		/********************************************************/
		/*					Остальные методы					*/
		/********************************************************/

		// Использовать предмет (выстрелить, захиллиться, перезарядиться)
		virtual int using_item(Creature&) = 0;


		// Создание копии предмета
		Item* clone() { return this; };

	};

}

#endif // !_ITEM_H_



